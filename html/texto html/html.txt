<!DOCTYPE html>         | define que este documento es HTML5
<html>           </html>| define la raíz del documento
    lang="en-US/es/..."
        declarar el lenguaje de la página y tmb el país
<head>           </head>| contiene información meta(?) sobre la página

<link>                  | define la relación entre el documento y una fuente externa
    ej: archivo css, icono, etc
<title>         </title>| título de la página, es muy importante para el search engine
    optimization (SEO)
<body>           </body>| el contenedor de todos los objetos visibles
<h1-6>             </hn>| encabezado
<p>                 </p>| párrafo
    title=""
        define una info extra sobre el elemento

<b>                     | letra en negrita
<strong>                | letra con importancia fuerte
<i>                     | letra acostada, gralmente usada para indicar términos técnicos,
-                       | una frase de otro lenguaje, un pensamiento, ships, etc
<em>                    | letra enfatizada
<mark>                  | letra resaltada
<small>                 | letra chiquita
<del>                   | letra tachada
<ins>                   | letra subrayada
<sub>                   | letra debajo
<sup>                   | letra por encima


<code>           </code>| código de computadora
<kbd>             </kbd>| keyboard input
<samp>           </samp>| program output
<var>             </var>| para definir una variable


<br>                    | salto de línea
<hr>                    | separador de contenido


<a>                 </a>| links
    href=""     url, otro archivo, etc
    target=""   donde abrir la página (_parent / _top = _self)
    title=""    especifica info extra, se muestra cuando se pasa el mouse sobre el elemento


<table>         </table>| tablas, puede contener texto, imágenes, listas, links, tablas, etc
<tr>               </tr>| columna
<td>               </td>| celda
<th>               </th>| encabezado
<caption>     </caption>| título de la tabla
<colgroup>   </colgroup>| después de caption SIEMPRE, para colorear de a varias columnas
<col>                   | elemento dentro de colgroup
    span="número"   de a cuantas columnas queres colorear
    style=""        para colorear
<thead>     ???
<tbody>     ???
<tfoot>     ???


<ul>               </ul>| lista no ordenada, puntitos
<ol>               </ol>| lista ordenada, números
<li>               </li>| elementos de las listas (sean ordenadas o no)
<dl>               </dl>| lista detallada
<dt>               </dt>| elemento de la lista detallada (ítem)
<dd>               </dd>| elemento de la lista detallada (descripción)



<img>                   | insertar una imágen
    src=""
        hay 2 formas de especificar una url:
        - absoluta = trae una imagen de otra web (https://www.....)
        - relativa = propia de la web, de la misma computadora (/yo/imagen.png)
    alt=""
        por si alguna razón la imagen no se muestra, la reemplaza el texto
    usemap=""
        en caso de que la imagen se haga clickeable en una área específica
<map>             </map>| hace a la imagen clickeable en una área determinada
    name=""
        dale un nombre para relacionar con la imagen
<area>                  | donde se puede clickear en la imagen
    shape=""
        la forma del area a clickear
    coords=""
        la posición donde será clickeable
    alt=""
        para mostrar texto
    href=""
        para ir hacia otra página
    onclick=""
        JAVASCRIPT
<picture>     </picture>| permite mostrar imágenes diferentes para dispositivos diferentes o tamaños
    de pantalla
    <source>
        media=""
            define cuándo la imagen es visible
        srcset=""
* Si tenes una pantalla o dispositivo chico, no es necesario cargar una imagen larga.
* Ademas, algunos dipositivos no soportan todos los formatos de imagen. (el navegador usa
el primer formato q reconozca e ignora el resto)


<div>             </div>| es usado como contenedor de otros elementos
    style=""
    class=""
    id=""
<span>           </span>| usado para marcar una parte de un texto o documento
    style=""
    class=""
    id=""


LAYOUT ELEMENTS
<header>          </header>| contenedor de contenido introductorio o un set de links
    (h1...6, logo / icono, información de autorización). NO puede ser situado en un <footer>,
    <address> u otro <header>
<nav>                </nav>| set de links navegables
    no todos los links deben estar en el elemento, su uso es para bloques grandes de links
<section>        </section>| es una agrupación temática de contenido con un encabezado
    (capítulos, introducción, nuevos ítems, información de contacto)
<article>        </article>| especifica contenido independiente, dar sentido a sí mismo
    (posts de foros, de blogs; comentarios de usuarios, tarjetas de productos, artículos
    de periódicos)
<aside>            </aside>| define algun contenido aparte, indirectamente relacionado
<footer>          </footer>| el pie del documento
    (información de autoridad, de copyright, de contacto, mapeo del sitio, de vuelta al
    principio con links, documentos relacionados)
<details>        </details>| 
<summary>        </summary>| 
<figure>          </figure>| ilustraciones, diagramas, fotos, etc
<figcaption>  </figcaption>| como el <caption> de <table>
<main>              </main>| 
<time>              </time>| 


<label>            </label>| como java jaja
<form>              </form>| for user input
<input>            </input>| dentro de <form>
    type=""     (text, radio, checkbox, submit, button)
<select>          </select>| dentro de <form>
<option>          </option>| dentro de <select>
<fieldset>      </fieldset>| agrupar data relacionada del <form>
<legend>          </legend>| define titulo para el <fieldset>
<datalist>      </datalist>| especifica una lista predefinida para el <input>
<output>          </output>| medio JS


<canvas           </canvas>| para dibujar gráficos, via JS
<svg>                      | Scalable Vector Graphics, w3c recomendación, para gráficos 2d xml

<video>            </video>| mostrar video
    controls, autoplay muted, (width, height) style
<audio>            </audio>| mostrar audio
    controls
<source>                   | dentro de <video> o <audio>
    src=""
    type=""
        video/mp4, audio/mpeg



<object>          </object>| para los PLUG-INS
    width, height, data="" (snipplets.html, audi.jpeg)
<embed>                    | para los PLUG-INS
    src=""      audi.jpeg


<iframe>       </iframe>| para visualizar una web de una web

<pre>             </pre>| define texto preformateado, se muestra en una fuente de ancho fijo
-                       | su uso puede ser perfecto para poemas


<blockquote>            | define una sección que es referenciada de otra fuente, usualmente
    los navegadores identan
<q>                     | short quotation = comillas
<abbr>                  | abreviación de un acrónimo
<address>               | información de contacto (email, url, dirección física, número tel,
    redes sociales)
<cite>                  | define el título de un trabajo creativo (libro, poema, canción,
    película, pintura, escultura, etc)
<bdo>                   | Bi-Directional Override, cambiar el texto?
todo esto sirve más para los navegadores, sistemas de traducción y máquinas de búsqueda

(((((((((((((((((((((((((((((((((((((((((((())))))))))))))))))))))))))))))))))))))))))))

algunos elementos no tienen contenido, son llamados elementos vacíos y no tienen etiqueta final

html no es case-sensitive: <p> = <P>

los atributos proveen info adicional sobre los elementos, siempre son especificados en la
etiqueta de apertura

los navegadores automáticamente incluyen un espacio blanco antes y después de un encabezado
/ título visual, párrafo

para definir colores: RGB, HEX, HSL, RGBA (alpha = opacidad), HSLA
- ese rosa de helado (255,60,123)
- rosa fucsia (238,130,238)
- amarillo mostaza (255,165,0)
- grises
    oscuro (60,60,60)
    medio oscuro (100,100,100)
    medio oscuro clarín (140,140,140)
    clarín (180,180,180)
    claro (200,200,200)
- verde no tan manzana hsla (130, 100%, 74%, 0.7)

un link no visitado: azul
un link visitado: lila
un link activo: rojo

siempre especificá el ancho y alto de una imagen, de no especificar la página puede
parpadear mientras se carga la imágen
sería más adecuado usar style (width y height) en caso de importar archivos css

apng, gif, ico (.ico,cur), jpeg (jpg, jfif, pjpeg, pjp), png, svg

las listas agrupan ítems relacionados

todo elemento tiene valor por defecto de visualización: block e inline.
block-level: siempre empieza en una nueva línea y los navegadores agregan automáticamente
un espacio antes y después del elemento. Siempre toma el ancho completo disponible.
(address, article, aside, blockquote, canvas, dd, div, dl, dt, fieldset, figcaption,
figure, footer, form, h1...6, header, hr, li, main, nav, noscript, ol, p, pre, section,
table, tfoot, ul, video)

inline-level: no empieza en una nueva línea, toma el ancho necesario
(a, abbr, acronym, b, bdo, big, br, button, cite, code, dfn, em, i, img, input, kbd,
label, map, object, output, q, samp, script, select, small, span, strong, sub, sup,
textarea, time, tt, var)

* un block-level puede contener un inline-level, pero NO al revés

no se puede tener más de un elemento con el mismo id (tmb se puede usar en css: #a {})
- case sensitive
- debe contener al menos un caracter
- no puede empezar con número
- no debe contener espacios


metadata (data sobre data): titulo del documento, set de caracter, estilos, scripts, etc

solo puede haber un solo elemento <base> en un documento
<base href="url" target="_blank">
<body>
<a href="tags/tag_base.asp">

las webs a menudo presentan contenido en mútliples columnas
los elementos semánticos (describen su significado tanto para el desarrollador como para el
navegador) definen las partes de una we
LAYOUT TECHNIQUES:
- framework
- flaot: está atado al flow del documento, lo q lo hace menos flexible
- flexbox: asegura q los elementos se comporten predictiblemente
- grid

Viewport is the browser window size. 1vw = 1% of viewport width.
If the viewport is 50cm wide, 1vw is 0.5cm.

The form-handler is typically a server page with a script for processing input data.


PLUG-INS: extienden la funcionalidad estandar del navegador