Hyper Text Markup Language
HTML is the standard markup language for creating Web pages.
describes the structure, consists of a series of elements that tell the browser how to display
the content, IS NOT CASE SENSITIVE

<element> </element>
EMPTY ELEMENTS: with no content, without a closing tag



ATTRIBUTES: provide additional information about elements, always specified in the start tag and
lowercase. Double quotes are the most common but single quotes can also be used (" '' " / ' "" ').
name="value"

width and height are better on css than html
style >>> CSS

(class) can be used on any element. Multiple elements can share the same class.
Often used to point to a class name in a style sheet. It can also be used by JavaScript to
access and manipulate elements with the specific class name.
(id) You cannot have more than one element with the same id in an document.
It is also used by JavaScript to access and manipulate the element. The name is case sensitive!
Must contain at least one character, cannot start with a number, and must not contain
whitespaces (spaces, tabs, etc.).
Are used to allow readers to jump to specific parts of a webpage.



HEADINGS
Search engines use the headings to index the structure and content of your web pages.
Users often skim a page by its headings. It is important to use headings to show the document structure.
Each has a default size.

PARAGRAPHS
Always starts on a new line, and is usually a block of text.

HORIZONTAL RULES
Defines a thematic break in an HTML page, used to separate content (or define a change)

LINE BREAKS
A new line without starting a new paragraph.

TEXT FORMATTING/ELEMENTS
Were designed to display special types of text
b = without extra importance
strong = with importance

QUOTATION AND CITATION ELEMENTS



HYPERLINKS
You can click on a link and jump to another document and it does not have to be a text.
Absolute url: a full web address
Relative url: a local link, within the same website



IMAGES
[formats: apng, gif, ico, cur, jpg, jpeg, jfif, pjpeg, pjp, png, svg]
Images are not technically inserted into a web page; images are linked to web pages.
The tag creates a holding space for the referenced image.
make sure that the image actually stays in the same spot in relation to the web page,
otherwise your visitors will get a broken link icon.
External images might be under copyright. If you do not get permission to use it, you may be in
violation of copyright laws. In addition, you cannot control external images; they can
suddenly be removed or changed.

Image maps: clickable areas on a img.
1. Bandwidth
If you have a small screen or device, it is not necessary to load a large image file.
The browser will use the first element with matching attribute values, and ignore
any of the following elements.
2. Format Support
Some browsers or devices may not support all image formats. By using the element, you can add
images 



BLOCK AND INLINE ELEMENTS
Every HTML element has a default display value, there are two: block and inline.
A block-level element always starts on a new line, and the browsers automatically add
some space (a margin) before and after the element. Always takes up the full width
available (stretches out to the left and right as far as it can).
(address, article, aside, blockquote, canvas, dd, div, dl, dt, fieldset, figcaption,
figure, footer, form, h1-6, header, hr, li, main, nav, noscript, ol, p, pre, section,
table, tfoot, ul, video)
An inline element does not start on a new line, only takes up as much width as necessary.
(a, abbr, acronym, b, bdo, big, br, button, cite, code, dfn, em, i, img, input, kbd, label,
map, object, output, q, samp, script, select, small, span, strong, sub, sup, textarea,
time, tt, var)
An inline element cannot contain a block-level element! Only the other way around.



LAYOUT ELEMENTS AND TECHNIQUES
Websites often display content in multiple columns (like a magazine or a newspaper).
HTML has several semantic elements that define the different parts of a web page:
header, nav, section, article, aside, footer, details, summary
The layout techniques are four and they made on css.



RESPONSIVE WEB DESIGN
Responsive web design is about creating web pages that look good on all devices.
A responsive web design will automatically adjust for different screen sizes and viewports.
Is about using HTML and CSS.
Responsive images scale nicely to fit any browser size.
picture allows you to define different images for different browser window sizes.
The text size can be set with a "vw" unit, which means the "viewport width".
That way the text size will follow the size of the browser window.
In addition to resize text and images, it is also common to use media queries in responsive
web pages. With media queries you can define completely different styles for different browser
sizes.
A responsive web page should look good on large desktop screens and on small mobile phones.


viewport is the browser window size. 1vw = 1% of viewport width. If the viewport is
50cm wide, 1vw is 0.5cm.



SEMANTIC ELEMENTS
A semantic element clearly describes its meaning to both the browser and the developer.
A web page could normally be split into sections for introduction, content, and contact information.
You will find pages with section containing article and viceversa.
A semantic Web allows data to be shared and reused across applications, enterprises, and communities.



STYLE GUIDE
A consistent, clean, and tidy HTML code makes it easier for others to read and understand your code.
Always Specify alt, width, and height for Images.
it is NOT convenient to scroll right and left to read the code.
Do not add blank lines, spaces, or indentations without a reason.
For readability, add blank lines to separate large or logical code blocks.
For readability, add two spaces of indentation. Do not use the tab key.
Close Empty Elements? it is optional.
Add the lang Attribute, this is meant to assist search engines and browsers.
To ensure proper interpretation and correct search engine indexing, both the language and the
character encoding  should be defined as early as possible.
Setting The Viewport.
Use simple syntax for linking to style sheets (the type attribute is not necessary)
Use lowercase file (any) names. If you move from a case-insensitive to a case-sensitive server,
even small errors will break your web!
There is no difference between the .htm and .html file extensions.



ENTITIES
Reserved characters in HTML must be replaced with character entities.
A character entity looks like: &entity;
Entity names are case sensitive.
A diacritical mark is a "glyph" added to a letter.
Some diacritical marks, like grave ̀  and acute ´ are called accents.
Diacritical marks can appear both above and below a letter, inside a letter, and between two letters.
Diacritical marks can be used in combination with alphanumeric characters to produce a character
that is not present in the character set (encoding) used in the page.
Symbols that are not present on your keyboard can also be added by using entities.



FORMS
is used to collect user input. The user input is most often sent to a server for processing.
Processing input is explained in PHP.
Usually, the form data is sent to a file on the server when the user clicks on the submit button.
NEVER use GET to send sensitive data, the submitted data is visible in the URL.
Useful for form submissions where a user wants to bookmark the result. (get)